name: Build - Windows

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: ["MSVC", "Clang-cl"]
    name: Build - ${{ matrix.compiler }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies from PyPI
      run: |
        python -m pip install meson ninja

    - name: Install Clang-cl
      if: matrix.compiler == 'Clang-cl'
      run: |
        choco install llvm -y --version=16.0.6

    - name: Install NumPy (MSVC)
      if: matrix.compiler == 'MSVC'
      run: |
        meson setup build --vsenv
        meson compile -C build -v

    - name: Install NumPy (Clang-cl)
      if: matrix.compiler == 'Clang-cl'
      run: |
        "[binaries]","c = 'clang-cl'","cpp = 'clang-cl'","ar = 'llvm-lib'","c_ld = 'lld-link'","cpp_ld = 'lld-link'" | Out-File $PWD/clang-cl-build.ini -Encoding ascii
        meson setup build --vsenv --native-file=$PWD/clang-cl-build.ini
        meson compile -C build -v

    - name: Meson Log
      shell: bash
      if: ${{ failure()  }}
      run: |
        cat build/meson-logs/meson-log.txt

    - name: Run C executable
      run: ./build/mainc
    - name: Run C++ executable
      run: ./build/maincpp
